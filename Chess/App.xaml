<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:Chess.Models"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="Chess.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <SolidColorBrush x:Key="DarkBoardLocation" Color="#8B6246"/>
        <SolidColorBrush x:Key="LightBoardLocation" Color="#deb887"/>
        <Color x:Key="BoardLocationMouseOver">Red</Color>
        
        <Duration x:Key="StandardDuration">0:0:0.2</Duration>

        <ControlTemplate x:Key="BaseBoardLocationTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" BorderThickness="0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <!--If the mouse is over the control and the toggle button is NOT checked, animate a border into view-->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition SourceName="Border" Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsChecked" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard Name="MouseOverStoryboard">
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).Color" 
                                                Storyboard.TargetName="Border" 
                                                To="{StaticResource BoardLocationMouseOver}" 
                                                Duration="{StaticResource StandardDuration}" />
                                <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="2" Duration="{StaticResource StandardDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="MouseOverStoryboard"/>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="Red"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        

        <!--Define the datatemplate for chess pieces. Currently the pieces are represented by their toString() method.
            The colour of the text indicates the colour of the piece-->
        <DataTemplate DataType="{x:Type models:ChessPiece}">
            <TextBlock x:Name="root" Foreground="White" Background="Transparent" Text="{Binding}"/>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Colour}" Value="Black">
                    <Setter TargetName="root" Property="Foreground" Value="Black"/>
                </DataTrigger>
            </DataTemplate.Triggers>
            
        </DataTemplate>        
    </Application.Resources>
</Application>
