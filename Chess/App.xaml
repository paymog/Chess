<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:Chess.Models"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="Chess.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <SolidColorBrush x:Key="DarkBoardLocation" Color="Gray"/>
        <SolidColorBrush x:Key="LightBoardLocation" Color="Beige"/>

        <Color x:Key="BoardLocationMouseOver">Red</Color>

        <ControlTemplate x:Key="BaseBoardLocationTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" CornerRadius="0" BorderThickness="0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard x:Name="MouseOverStoryboard">
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                            Storyboard.TargetName="Border" To="{StaticResource BoardLocationMouseOver}" Duration="0:0:0.1"/>
                                <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="2" Duration="0:0:0.1"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">

                        <VisualState x:Name="Checked" >
                            <Storyboard >

                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).Color"
                                                            Storyboard.TargetName="Border" To="{StaticResource BoardLocationMouseOver}" Duration="0:0:0.1"/>
                                <!--<ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                                            Storyboard.TargetName="Border" To="{StaticResource BoardLocationMouseOver}" Duration="0:0:0.1"/>
                                <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="2" Duration="0:0:0.1"/>-->
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
        </ControlTemplate>

        

        <!--Define the datatemplate for chess pieces. Currently the pieces are represented by their toString() method.
            The colour of the text indicates the colour of the piece-->
        <DataTemplate DataType="{x:Type models:ChessPiece}">
            <TextBlock x:Name="root" Foreground="White" Background="Transparent" Text="{Binding}"/>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Colour}" Value="Black">
                    <Setter TargetName="root" Property="Foreground" Value="Black"/>
                </DataTrigger>
            </DataTemplate.Triggers>
            
        </DataTemplate>        
    </Application.Resources>
</Application>
